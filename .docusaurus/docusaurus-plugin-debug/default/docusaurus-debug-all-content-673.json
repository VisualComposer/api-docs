{
  "docusaurus-plugin-content-docs": {
    "default": {
      "loadedVersions": [
        {
          "versionName": "current",
          "versionLabel": "Next",
          "versionPath": "/",
          "tagsPath": "/tags",
          "versionEditUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs",
          "versionEditUrlLocalized": "https://github.com/VisualComposer/api-docs/edit/main/i18n/en/docusaurus-plugin-content-docs/current",
          "versionBanner": null,
          "versionBadge": false,
          "versionClassName": "docs-version-current",
          "isLast": true,
          "routePriority": -1,
          "sidebarFilePath": "/Users/nikitahlopovs/Documents/dev/api-docs/sidebars.js",
          "contentPath": "/Users/nikitahlopovs/Documents/dev/api-docs/docs",
          "contentPathLocalized": "/Users/nikitahlopovs/Documents/dev/api-docs/i18n/en/docusaurus-plugin-content-docs/current",
          "mainDocId": "intro",
          "sidebars": {
            "tutorialSidebar": [
              {
                "type": "doc",
                "id": "intro"
              },
              {
                "type": "category",
                "label": "Element Structure",
                "items": [
                  {
                    "type": "doc",
                    "id": "element-structure/element-structure"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Element Hook",
                "items": [
                  {
                    "type": "doc",
                    "id": "element-hook/element-hook"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Element Attributes",
                "items": [
                  {
                    "type": "doc",
                    "id": "element-attributes/attributes-onchange"
                  },
                  {
                    "type": "doc",
                    "id": "element-attributes/attributes-options"
                  },
                  {
                    "type": "doc",
                    "id": "element-attributes/element-attributes"
                  },
                  {
                    "type": "doc",
                    "id": "element-attributes/meta-attributes"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "CSS Mixins",
                "items": [
                  {
                    "type": "doc",
                    "id": "css-mixins/element-css-mixins"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Inner Elements",
                "items": [
                  {
                    "type": "doc",
                    "id": "inner-elements/inner-elements"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Element Component",
                "items": [
                  {
                    "type": "doc",
                    "id": "element-component/element-component-methods"
                  },
                  {
                    "type": "doc",
                    "id": "element-component/render-custom-content"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Assets",
                "items": [
                  {
                    "type": "doc",
                    "id": "assets/3rd-party-assets"
                  },
                  {
                    "type": "doc",
                    "id": "assets/shared-assets"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Dynamic Content",
                "items": [
                  {
                    "type": "doc",
                    "id": "dynamic-content/dynamic-content"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              },
              {
                "type": "category",
                "label": "Tutorials",
                "items": [
                  {
                    "type": "doc",
                    "id": "tutorials/how-to-create-button-element"
                  },
                  {
                    "type": "doc",
                    "id": "tutorials/how-to-create-custom-elements-using-visual-composer-api"
                  },
                  {
                    "type": "doc",
                    "id": "tutorials/how-to-integrate-visual-composer-in-a-wp-theme"
                  },
                  {
                    "type": "doc",
                    "id": "tutorials/how-to-submit-your-elment-to-the-visual-composer-hub"
                  }
                ],
                "collapsed": true,
                "collapsible": true
              }
            ]
          },
          "docs": [
            {
              "unversionedId": "assets/3rd-party-assets",
              "id": "assets/3rd-party-assets",
              "isDocsHomePage": false,
              "title": "3rd party assets",
              "description": "Visual Composer API allows you to use 3rd party assets (such as JavaScript libraries) in your elements.",
              "source": "@site/docs/assets/3rd-party-assets.md",
              "sourceDirName": "assets",
              "slug": "/assets/3rd-party-assets",
              "permalink": "/assets/3rd-party-assets",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/assets/3rd-party-assets.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Render Custom Content",
                "permalink": "/element-component/render-custom-content"
              },
              "next": {
                "title": "Shared assets",
                "permalink": "/assets/shared-assets"
              }
            },
            {
              "unversionedId": "assets/shared-assets",
              "id": "assets/shared-assets",
              "isDocsHomePage": false,
              "title": "Shared assets",
              "description": "Visual Composer elements have an ability to include JavaScript and CSS libraries out of the box. These libraries are called shared assets.",
              "source": "@site/docs/assets/shared-assets.md",
              "sourceDirName": "assets",
              "slug": "/assets/shared-assets",
              "permalink": "/assets/shared-assets",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/assets/shared-assets.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "3rd party assets",
                "permalink": "/assets/3rd-party-assets"
              },
              "next": {
                "title": "Dynamic Content",
                "permalink": "/dynamic-content/dynamic-content"
              }
            },
            {
              "unversionedId": "css-mixins/element-css-mixins",
              "id": "css-mixins/element-css-mixins",
              "isDocsHomePage": false,
              "title": "Element CSS Mixins",
              "description": "CSS Mixins",
              "source": "@site/docs/css-mixins/element-css-mixins.md",
              "sourceDirName": "css-mixins",
              "slug": "/css-mixins/element-css-mixins",
              "permalink": "/css-mixins/element-css-mixins",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/css-mixins/element-css-mixins.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Meta Attributes",
                "permalink": "/element-attributes/meta-attributes"
              },
              "next": {
                "title": "Inner Elements",
                "permalink": "/inner-elements/inner-elements"
              }
            },
            {
              "unversionedId": "dynamic-content/dynamic-content",
              "id": "dynamic-content/dynamic-content",
              "isDocsHomePage": false,
              "title": "Dynamic Content",
              "description": "The dynamicField option allows to select a value from a set of custom WordPress fields, such as post title, post author, featured image, or custom meta fields.",
              "source": "@site/docs/dynamic-content/dynamic-content.md",
              "sourceDirName": "dynamic-content",
              "slug": "/dynamic-content/dynamic-content",
              "permalink": "/dynamic-content/dynamic-content",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/dynamic-content/dynamic-content.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Shared assets",
                "permalink": "/assets/shared-assets"
              },
              "next": {
                "title": "How to Create Your First Element - Button",
                "permalink": "/tutorials/how-to-create-button-element"
              }
            },
            {
              "unversionedId": "element-attributes/attributes-onchange",
              "id": "element-attributes/attributes-onchange",
              "isDocsHomePage": false,
              "title": "Attributes onChange",
              "description": "onChange option",
              "source": "@site/docs/element-attributes/attributes-onchange.md",
              "sourceDirName": "element-attributes",
              "slug": "/element-attributes/attributes-onchange",
              "permalink": "/element-attributes/attributes-onchange",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-attributes/attributes-onchange.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Element Hook",
                "permalink": "/element-hook/element-hook"
              },
              "next": {
                "title": "Attributes Options",
                "permalink": "/element-attributes/attributes-options"
              }
            },
            {
              "unversionedId": "element-attributes/attributes-options",
              "id": "element-attributes/attributes-options",
              "isDocsHomePage": false,
              "title": "Attributes Options",
              "description": "Each attribute has a type and options. Options property is an object that may contain multiple properties which can extend an attribute.",
              "source": "@site/docs/element-attributes/attributes-options.md",
              "sourceDirName": "element-attributes",
              "slug": "/element-attributes/attributes-options",
              "permalink": "/element-attributes/attributes-options",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-attributes/attributes-options.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Attributes onChange",
                "permalink": "/element-attributes/attributes-onchange"
              },
              "next": {
                "title": "Attributes",
                "permalink": "/element-attributes/element-attributes"
              }
            },
            {
              "unversionedId": "element-attributes/element-attributes",
              "id": "element-attributes/element-attributes",
              "isDocsHomePage": false,
              "title": "Attributes",
              "description": "ajaxForm",
              "source": "@site/docs/element-attributes/element-attributes.md",
              "sourceDirName": "element-attributes",
              "slug": "/element-attributes/element-attributes",
              "permalink": "/element-attributes/element-attributes",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-attributes/element-attributes.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Attributes Options",
                "permalink": "/element-attributes/attributes-options"
              },
              "next": {
                "title": "Meta Attributes",
                "permalink": "/element-attributes/meta-attributes"
              }
            },
            {
              "unversionedId": "element-attributes/meta-attributes",
              "id": "element-attributes/meta-attributes",
              "isDocsHomePage": false,
              "title": "Meta Attributes",
              "description": "Protected meta attributes of the Visual Composer available for use via the API.",
              "source": "@site/docs/element-attributes/meta-attributes.md",
              "sourceDirName": "element-attributes",
              "slug": "/element-attributes/meta-attributes",
              "permalink": "/element-attributes/meta-attributes",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-attributes/meta-attributes.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Attributes",
                "permalink": "/element-attributes/element-attributes"
              },
              "next": {
                "title": "Element CSS Mixins",
                "permalink": "/css-mixins/element-css-mixins"
              }
            },
            {
              "unversionedId": "element-component/element-component-methods",
              "id": "element-component/element-component-methods",
              "isDocsHomePage": false,
              "title": "Element Component Methods",
              "description": "Each custom element extends a Visual Composer elementComponent class which itself is a React component. There is default React lifecycle methods that can be used to render and update the elementComponent.",
              "source": "@site/docs/element-component/element-component-methods.md",
              "sourceDirName": "element-component",
              "slug": "/element-component/element-component-methods",
              "permalink": "/element-component/element-component-methods",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-component/element-component-methods.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Inner Elements",
                "permalink": "/inner-elements/inner-elements"
              },
              "next": {
                "title": "Render Custom Content",
                "permalink": "/element-component/render-custom-content"
              }
            },
            {
              "unversionedId": "element-component/render-custom-content",
              "id": "element-component/render-custom-content",
              "isDocsHomePage": false,
              "title": "Render Custom Content",
              "description": "Overview",
              "source": "@site/docs/element-component/render-custom-content.md",
              "sourceDirName": "element-component",
              "slug": "/element-component/render-custom-content",
              "permalink": "/element-component/render-custom-content",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-component/render-custom-content.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Element Component Methods",
                "permalink": "/element-component/element-component-methods"
              },
              "next": {
                "title": "3rd party assets",
                "permalink": "/assets/3rd-party-assets"
              }
            },
            {
              "unversionedId": "element-hook/element-hook",
              "id": "element-hook/element-hook",
              "isDocsHomePage": false,
              "title": "Element Hook",
              "description": "Inside plugin’s index.php file use vcv:api hook for any API call. To add an element you need to pass a path to manifest.json file and URL to the base directory of your element (see WordPress plugin example.)",
              "source": "@site/docs/element-hook/element-hook.md",
              "sourceDirName": "element-hook",
              "slug": "/element-hook/element-hook",
              "permalink": "/element-hook/element-hook",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-hook/element-hook.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Element Structure",
                "permalink": "/element-structure/element-structure"
              },
              "next": {
                "title": "Attributes onChange",
                "permalink": "/element-attributes/attributes-onchange"
              }
            },
            {
              "unversionedId": "element-structure/element-structure",
              "id": "element-structure/element-structure",
              "isDocsHomePage": false,
              "title": "Element Structure",
              "description": "Every element is represented with settings files and JS/PHP files. The best way to understand element structure is to clone our boilerplate repository on GitHub.",
              "source": "@site/docs/element-structure/element-structure.md",
              "sourceDirName": "element-structure",
              "slug": "/element-structure/element-structure",
              "permalink": "/element-structure/element-structure",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/element-structure/element-structure.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1
              },
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Introduction",
                "permalink": "/"
              },
              "next": {
                "title": "Element Hook",
                "permalink": "/element-hook/element-hook"
              }
            },
            {
              "unversionedId": "inner-elements/inner-elements",
              "id": "inner-elements/inner-elements",
              "isDocsHomePage": false,
              "title": "Inner Elements",
              "description": "For advanced custom elements, Visual Composer allows you to integrate elements within other elements. Such an approach allows you to create a more flexible element with better structure and keep components less dependent.",
              "source": "@site/docs/inner-elements/inner-elements.md",
              "sourceDirName": "inner-elements",
              "slug": "/inner-elements/inner-elements",
              "permalink": "/inner-elements/inner-elements",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/inner-elements/inner-elements.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Element CSS Mixins",
                "permalink": "/css-mixins/element-css-mixins"
              },
              "next": {
                "title": "Element Component Methods",
                "permalink": "/element-component/element-component-methods"
              }
            },
            {
              "unversionedId": "intro",
              "id": "intro",
              "isDocsHomePage": false,
              "title": "Introduction",
              "description": "Visual Composer API allows you to develop your own custom elements for the website builder. With custom elements, you are in charge of your element design and functionality which is crucial for advanced projects and allows perfectly aligned element choice to your brand.",
              "source": "@site/docs/intro.md",
              "sourceDirName": ".",
              "slug": "/",
              "permalink": "/",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/intro.md",
              "tags": [],
              "version": "current",
              "sidebarPosition": 1,
              "frontMatter": {
                "sidebar_position": 1,
                "slug": "/"
              },
              "sidebar": "tutorialSidebar",
              "next": {
                "title": "Element Structure",
                "permalink": "/element-structure/element-structure"
              }
            },
            {
              "unversionedId": "tutorials/how-to-create-button-element",
              "id": "tutorials/how-to-create-button-element",
              "isDocsHomePage": false,
              "title": "How to Create Your First Element - Button",
              "description": "You can create your own custom elements with the Visual Composer API. With custom elements, you are in charge of your element design and functionality which is crucial for advanced projects and allows perfectly aligned element choice to your brand.",
              "source": "@site/docs/tutorials/how-to-create-button-element.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/how-to-create-button-element",
              "permalink": "/tutorials/how-to-create-button-element",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/tutorials/how-to-create-button-element.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "Dynamic Content",
                "permalink": "/dynamic-content/dynamic-content"
              },
              "next": {
                "title": "How to Create Custom Elements using Visual Composer API",
                "permalink": "/tutorials/how-to-create-custom-elements-using-visual-composer-api"
              }
            },
            {
              "unversionedId": "tutorials/how-to-create-custom-elements-using-visual-composer-api",
              "id": "tutorials/how-to-create-custom-elements-using-visual-composer-api",
              "isDocsHomePage": false,
              "title": "How to Create Custom Elements using Visual Composer API",
              "description": "We’re going to cover step-by-step instructions that will help you to create your own custom element.",
              "source": "@site/docs/tutorials/how-to-create-custom-elements-using-visual-composer-api.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/how-to-create-custom-elements-using-visual-composer-api",
              "permalink": "/tutorials/how-to-create-custom-elements-using-visual-composer-api",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/tutorials/how-to-create-custom-elements-using-visual-composer-api.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to Create Your First Element - Button",
                "permalink": "/tutorials/how-to-create-button-element"
              },
              "next": {
                "title": "How to Integrate Visual Composer in a WordPress Theme",
                "permalink": "/tutorials/how-to-integrate-visual-composer-in-a-wp-theme"
              }
            },
            {
              "unversionedId": "tutorials/how-to-integrate-visual-composer-in-a-wp-theme",
              "id": "tutorials/how-to-integrate-visual-composer-in-a-wp-theme",
              "isDocsHomePage": false,
              "title": "How to Integrate Visual Composer in a WordPress Theme",
              "description": "If you're a theme developer, you probably already know that there are many benefits of including plugins in your theme. And including Visual Composer in your WordPress theme is really fast and simple. To do that, we'll use TGM Plugin Activation which is a PHP library “that allows you to easily require or recommend plugins for your WordPress themes (and plugins)”.",
              "source": "@site/docs/tutorials/how-to-integrate-visual-composer-in-a-wp-theme.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/how-to-integrate-visual-composer-in-a-wp-theme",
              "permalink": "/tutorials/how-to-integrate-visual-composer-in-a-wp-theme",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/tutorials/how-to-integrate-visual-composer-in-a-wp-theme.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to Create Custom Elements using Visual Composer API",
                "permalink": "/tutorials/how-to-create-custom-elements-using-visual-composer-api"
              },
              "next": {
                "title": "How to Submit Your Element to the Visual Composer Hub",
                "permalink": "/tutorials/how-to-submit-your-elment-to-the-visual-composer-hub"
              }
            },
            {
              "unversionedId": "tutorials/how-to-submit-your-elment-to-the-visual-composer-hub",
              "id": "tutorials/how-to-submit-your-elment-to-the-visual-composer-hub",
              "isDocsHomePage": false,
              "title": "How to Submit Your Element to the Visual Composer Hub",
              "description": "In this article, I'm going to cover the steps you need to know if you want to submit your custom element to Visual Composer Hub.",
              "source": "@site/docs/tutorials/how-to-submit-your-elment-to-the-visual-composer-hub.md",
              "sourceDirName": "tutorials",
              "slug": "/tutorials/how-to-submit-your-elment-to-the-visual-composer-hub",
              "permalink": "/tutorials/how-to-submit-your-elment-to-the-visual-composer-hub",
              "editUrl": "https://github.com/VisualComposer/api-docs/edit/main/docs/tutorials/how-to-submit-your-elment-to-the-visual-composer-hub.md",
              "tags": [],
              "version": "current",
              "frontMatter": {},
              "sidebar": "tutorialSidebar",
              "previous": {
                "title": "How to Integrate Visual Composer in a WordPress Theme",
                "permalink": "/tutorials/how-to-integrate-visual-composer-in-a-wp-theme"
              }
            }
          ]
        }
      ]
    }
  },
  "docusaurus-plugin-content-blog": {
    "default": {
      "blogSidebarTitle": "Recent posts",
      "blogPosts": [],
      "blogListPaginated": [],
      "blogTags": {},
      "blogTagsListPath": null
    }
  },
  "docusaurus-plugin-content-pages": {
    "default": null
  },
  "docusaurus-plugin-debug": {
    "default": null
  },
  "docusaurus-theme-classic": {
    "default": null
  },
  "docusaurus-theme-search-algolia": {
    "default": null
  }
}